Test board
[1 , 2, 3],
[4 , 5, 6],
[7 , 8, 9],

convert to dia_1 -> 

1
2, 4
3, 5, 7
6, 8
9

convert to dia_2 ->

3
2, 6
1, 5, 9
4, 8
7

How to get the real x,y ?

dia_1 convertion method for the new_x = x + y
row_size -> board_size * 2 - 1 = 5

x,y -> new_x,new_y
0,0 -> 0,0
0,1 -> 1,0
0,2 -> 2,0
1,0 -> 1,1
1,1 -> 2,1
1,2 -> 3,0
2,0 -> 2,2
2,1 -> 3,1
2,2 -> 4,0

x = new_x - y
y = (new_x - new_y) / 2

dia_2 convertion method for the new_x = (board_size - 1) - y + x
row_size -> board_size * 2 - 1 = 5

x,y -> new_x,new_y
0,2 -> 0,0
0,1 -> 1,0
0,0 -> 2,0
1,2 -> 1,1
1,1 -> 2,1
1,0 -> 3,0
2,2 -> 2,2
2,1 -> 3,1
2,0 -> 4,0

        X        
_,_,_,0,1,1,1,0,_   curr_cell = pattern[1]
_,_,0,1,1,1,0,_,_   curr_cell = pattern[2]
_,0,1,1,1,0,_,_,_   curr_cell = pattern[3]

_,_,_,0,1,0,1,1,0   curr_cell = pattern[1]
_,0,1,0,1,1,0,_,_   curr_cell = pattern[3]
0,1,0,1,1,0,_,_,_   curr_cell = pattern[4]

_,_,_,0,1,1,0,1,0   curr_cell = pattern[1]
_,_,0,1,1,0,1,0,_   curr_cell = pattern[2]
0,1,1,0,1,0,_,_,_   curr_cell = pattern[4]

_,_,_,0,1,1,1,0,_   if left = 0, check pattern[1] onward dir forward pattern[2] === x + 2 ?
_,_,_,0,1,0,1,1,0
_,_,_,0,1,1,0,1,0 

_,0,1,1,1,0,_,_,_   if right = 0, check pattern[1] onward dir backward pattern[2] === x - 2 ?
0,1,0,1,1,0,_,_,_
0,1,1,0,1,0,_,_,_

_,_,0,1,1,1,0,_,_  else x + 1 === x, x - 1 === x, x + 2 === 0, x - 2 === 0
_,0,1,0,1,1,0,_,_ 
_,_,0,1,1,0,1,0,_ 

const check = () => {
  if (x - 1 === 0) {
    for (let i = 2; i < pattern.length; i++) {
      if !(pattern[i] === board[x + i]);
        break;
    }
  }
  else if (x + 1 === 0) {
    for (let i = 2; i < pattern.length; i++) {
      if !(pattern[i] === board[x - i]);
        break;
    }
  }
  else {
    if (x + 1 === x, x - 1 === x, x + 2 === 0, x - 2 === 0) {

    }
  }

  if ()
}